@using Microsoft.AspNetCore.Identity
@using SellingUsedThings.Models.Entity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager



<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        var user = UserManager.GetUserAsync(User).Result;

        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Chat" asp-action="Index"><i class="bi bi-chat-quote fs-5">
                @if(user.UnReadMessageCount>0)
                  @user.UnReadMessageCount
            </i></a>
        </li>

    <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <img src="@user.ImgPath" alt="" class="profile-image" />
                Hello @(string.IsNullOrEmpty(user.FirstName) ? User.Identity?.Name : user.FirstName)!
            </a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
