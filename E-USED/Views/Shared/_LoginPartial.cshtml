@using Microsoft.AspNetCore.Identity
@using SellingUsedThings.Models.Entity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@{
    string firstName = null;
    if (SignInManager.IsSignedIn(User))
    {
        var user = UserManager.GetUserAsync(User).Result;
        firstName = user?.FirstName;
    }
}


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"> Hello @(string.IsNullOrEmpty(firstName) ? User.Identity?.Name : firstName)!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
